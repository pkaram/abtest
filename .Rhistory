library(ggplot2)
packageVersion("ggplot2")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
install.packages("hrbrthemes")
# library
library(ggplot2)
library(dplyr)
library(hrbrthemes)
# Build dataset with different distributions
data <- data.frame(
type = c( rep("variable 1", 1000), rep("variable 2", 1000) ),
value = c( rnorm(1000), rnorm(1000, mean=4) )
)
# Represent it
p <- data %>%
ggplot( aes(x=value, fill=type)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
p
detach("dplyr")
detach("package:dplyr")
# Build dataset with different distributions
data <- data.frame(
type = c( rep("variable 1", 1000), rep("variable 2", 1000) ),
value = c( rnorm(1000), rnorm(1000, mean=4) )
)
# Represent it
p <- data %>%
ggplot( aes(x=value, fill=type)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
p
detach("package:ggplot2")
detach("package:hrbrthems")
detach("package:hrbrthemes")
# Build dataset with different distributions
data <- data.frame(
type = c( rep("variable 1", 1000), rep("variable 2", 1000) ),
value = c( rnorm(1000), rnorm(1000, mean=4) )
)
# Represent it
p <- ggplot2::ggplot( data = data,aes(x=value, fill=type)) +
ggplot2::geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
ggplot2::scale_fill_manual(values=c("#69b3a2", "#404080")) +
hrbrthemes::theme_ipsum() +
ggplot2::labs(fill="")
# Represent it
p <- ggplot2::ggplot( data = data,ggplot2::aes(x=value, fill=type)) +
ggplot2::geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
ggplot2::scale_fill_manual(values=c("#69b3a2", "#404080")) +
hrbrthemes::theme_ipsum() +
ggplot2::labs(fill="")
p
packageVersion("hrbrthemes")
hist_comparison <- function(){
data <- data.frame(
type = c( rep("variable 1", 1000), rep("variable 2", 1000) ),
value = c( rnorm(1000), rnorm(1000, mean=4) )
)
p <- ggplot2::ggplot( data = data,ggplot2::aes(x=value, fill=type)) +
ggplot2::geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
ggplot2::scale_fill_manual(values=c("#69b3a2", "#404080")) +
hrbrthemes::theme_ipsum() +
ggplot2::labs(fill="")
p
}
rm(data)
rm(p)
hist_comparison()
devtools::document()
packageVersion("devtools")
install.packages("usethat")
devtools::install()
library("abtest")
abtest::hist_comparison()
a <- c(12,3,3,4,56,6)
var(a)
x<-a
rm(a)
m <- mean(x)
m-x
(m-x=
(m-x)
(m-x)**2
sum((m-x)**2)/length(x)
sqrt(sum((m-x)**2)/length(x))
os_ttest <- function(x,m0) {
m <- mean(x)
sd <- sqrt(sum((m-x)**2)/length(x))
t <- (m-m0)/(sd/sqrt(length(x)))
t
}
os_ttest(x,3)
?qt
pt(os_ttest(x,3),length(x)-1)
pt(os_ttest(x,3)+1,length(x)-1)
qt(os_ttest(x,3)+1,length(x)-1)
dt(os_ttest(x,3)+1,length(x)-1)
qt(dt(os_ttest(x,3)+1,length(x)-1))
qt(dt(os_ttest(x,3)+1,length(x)-1),length(x)-1)
pt(dt(os_ttest(x,3)+1,length(x)-1),length(x)-1)
pt(os_ttest(x,3)+1,length(x)-1,lower=FALSE)
pt(os_ttest(x,3)+1,length(x)-1,lower=FALSE)*2
os_ttest <- function(x,m0) {
m <- mean(x)
sd <- sqrt(sum((m-x)**2)/length(x))
t <- (m-m0)/(sd/sqrt(length(x)))
pt(t,length(x)-1,lower=FALSE)*2
}
os_ttest(x,3)
os_ttest(x,10)
x <- rnorm(1000)
os_ttest(x,10)
os_ttest(x,0)
os_ttest <- function(x,m0) {
m <- mean(x)
sd <- sqrt(sum((m-x)**2)/length(x))
t <- (m-m0)/(sd/sqrt(length(x)))
pt(-abs(t),df=length(x)-1,lower=FALSE)*2
}
os_ttest(x,0)
os_ttest(x,3)
os_ttest(x,x)
x
m <- mean(x)
sd <- sqrt(sum((m-x)**2)/length(x))
t <- (m-m0)/(sd/sqrt(length(x)))
m0=0
m <- mean(x)
sd <- sqrt(sum((m-x)**2)/length(x))
t <- (m-m0)/(sd/sqrt(length(x)))
t
-abs(t)
2*pt(-abs(t),df=length(x)-1,lower=FALSE)
2*pt(-abs(t),df=length(x)-1,lower.tail=FALSE)
m0
mean(x)
x <- rnorm(10000)
m <- mean(x)
sd <- sqrt(sum((m-x)**2)/length(x))
t <- (m-m0)/(sd/sqrt(length(x)))
2*pt(-abs(t),df=length(x)-1,lower.tail=FALSE)
sqrt(var(x))
pt(0,df=length(x)-1,lower.tail=FALSE)
pt(0,df=length(x)-1)
pt(2,df=length(x)-1)
pt(3,df=length(x)-1)
m <- mean(x)
#sd <- sqrt(sum((m-x)**2)/length(x))
sd <- sqrt(var(x))
t <- (m-m0)/(sd/sqrt(length(x)))
2*pt(-abs(t),df=length(x)-1,lower.tail=FALSE)
sqrt(sum((x - mean(x))^2)/(n - 1))
sqrt(sum((x - mean(x))^2)/(length(x) - 1))
sqrt(sum((m-x)**2)/length(x))
t.test(x,3)
?t.test
